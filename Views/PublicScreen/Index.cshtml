@model SuVanCop.Models.ViewModels.PublicScreenViewModel

@{
Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SuVanCop</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SuVanCop.styles.css" asp-append-version="true" />
</head>
<body>
<div class="container">
    <main role="main" class="pb-3">
        <h2 class="text-center my-4">Turnos</h2>
        <div id="turns" class="row">
            <div class="col-md-4 mb-3">
                <div class="card shadow-sm">
                    <div class="card-body text-center" id="turnoActualizado">
                        @if (Model.CurrentTurn != null)
                        {
                        <h5 class="card-title">Turno: @Model.CurrentTurn.Type[0] @Model.CurrentTurn.Number</h5>
                        <p class="card-text">Taquilla: 1</p>
                        }
                        else
                        {
                        <div class="text-center alert alert-warning">No hay más turnos disponibles.</div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <h2 class="text-center my-4">Cita Actual</h2>
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card shadow-sm">
                    <div class="card-body text-center">
                        <div id="citaActualizada">
                            @if (Model.CurrentAppointment != null)
                            {
                            <h5 class="card-title">Paciente: @Model.CurrentAppointment.User?.FullName</h5>
                            <p class="card-text">Doctor: @Model.CurrentAppointment.Doctor?.FullName</p>
                            <p class="card-text">Consultorio: 1</p>
                            <p class="card-text">Hora: @Model.CurrentAppointment.Hour.ToString("HH:mm")</p>
                            }
                            else
                            {
                            <div class="alert alert-warning text-center" role="alert">No hay cita actual.</div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/turnHub")
        .build();

    connection.start()
        .then(() => console.log("Conectado a SignalR (PublicScreen)"))
        .catch(err => console.error("Error conectando a SignalR:", err));

    connection.on("UpdateTurn", function (id, number, type) {
        const content = number > 0
            ? `
            <h5 class="card-title">Turno: ${type[0]} ${number}</h5>
            <p class="card-text">Taquilla: 1</p>
          `
            : `<div class="alert alert-warning text-center">No hay más turnos disponibles.</div>`;

        $('#turnoActualizado').fadeOut(200, function () {
            $(this).html(content).fadeIn(200);
        });
    });



    connection.on("UpdateAppointment", function (patientName, doctorName, office) {
        console.log("Cita actualizada:", patientName, doctorName);

        const appointmentContent = `Paciente: ${patientName} <br> Doctor: ${doctorName} <br> Consultorio: ${office}`;

        $('#citaActualizada').html(appointmentContent);
    });
</script>
</body>
</html>
