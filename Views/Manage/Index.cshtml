@model SuVanCop.Models.ViewModels.ManageViewModel

@{
    ViewData["Title"] = "Panel de Administración";
    Layout = "_ManageLayout";
}

<div class="container py-5">
    

    <!-- Sección de módulos -->
    <div class="row g-4">
        <!-- Módulo de Usuarios -->
        <div class="col-md-6">
            <div class="card border-0 shadow-lg rounded-4 h-100 bg-light bg-opacity-75">
                <div class="card-body d-flex flex-column justify-content-between p-4">
                    <div>
                        <h4 class="fw-bold text-primary"><i class="bi bi-people-fill me-2"></i> Usuarios</h4>
                        <p class="text-muted">Administra los usuarios registrados en el sistema.</p>
                    </div>
                    <div class="text-end">
                        <a href="@Url.Action("Index", "User")" class="btn btn-primary rounded-pill px-4">
                            <i class="bi bi-arrow-right-circle me-1"></i> Ir a Usuarios
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Módulo de Citas -->
        <div class="col-md-6">
            <div class="card border-0 shadow-lg rounded-4 h-100 bg-white bg-opacity-75">
                <div class="card-body d-flex flex-column justify-content-between p-4">
                    <div>
                        <h4 class="fw-bold text-primary"><i class="bi bi-calendar-check me-2"></i> Citas</h4>
                        <p class="text-muted">Gestiona las citas médicas programadas.</p>
                    </div>
                    <div class="text-end">
                        <a href="@Url.Action("Index", "Appointment")" class="btn btn-primary rounded-pill px-4">
                            <i class="bi bi-arrow-right-circle me-1"></i> Ir a Citas
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Módulo de Médicos -->
        <div class="col-md-12">
            <div class="card border-0 shadow-lg rounded-4 bg-light bg-opacity-75">
                <div class="card-body d-flex flex-column flex-md-row justify-content-between align-items-center p-4">
                    <div>
                        <h4 class="fw-bold text-primary"><i class="bi bi-person-badge me-2"></i> Médicos</h4>
                        <p class="text-muted mb-0">Administra los médicos y sus horarios clínicos.</p>
                    </div>
                    <a href="@Url.Action("Index", "Doctor")" class="btn btn-primary rounded-pill px-4 mt-3 mt-md-0">
                        <i class="bi bi-arrow-right-circle me-1"></i> Ir a Médicos
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Sección de Turnos -->
    <div class="mt-5">
        <div class="card border-0 shadow-lg rounded-4 bg-white bg-opacity-75">
            <div class="card-body text-center p-4">
                <h3 class="fw-bold text-secondary mb-3">
                    <i class="bi bi-clock-history me-2"></i> Turno Actual
                </h3>

                @if (Model.CurrentTurn != null)
                {
                    <div class="d-inline-block px-4 py-3 bg-light rounded-pill shadow-sm mb-3">
                        <span class="fs-5 text-dark">
                            <i class="bi bi-person-lines-fill me-2"></i>
                            <strong>@Model.CurrentTurn.Type @Model.CurrentTurn.Number</strong>
                        </span>
                    </div>
                    <br />
                    <button id="changeTurnButton" class="btn btn-danger rounded-pill px-4" data-turn-id="@Model.CurrentTurn.Id">
                        <i class="bi bi-arrow-repeat me-1"></i> Siguiente Turno
                    </button>
                }
                else
                {
                    <div class="alert alert-warning rounded-pill d-inline-block px-4 py-2 shadow-sm">
                        <i class="bi bi-exclamation-triangle me-2"></i> No hay un turno activo actualmente.
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/turnHub")
        .build();

    connection.start()
        .then(() => console.log("Conectado a SignalR (Manage)"))
        .catch(err => console.error(err.toString()));

    connection.on("UpdateTurn", function (id, number, type) {
        console.log("📡 Nuevo turno recibido:", id, type, number);

        if (id > 0) {
            $(".alert").removeClass("alert-warning").addClass("alert-info")
                .html(`Turno actual: <strong>${type} ${number}</strong>`);

            $("#changeTurnButton").data("turn-id", id);
            $("#changeTurnButton").show();
        } else {
            $(".alert").removeClass("alert-info").addClass("alert-warning")
                .text("No hay más turnos disponibles.");
            $("#changeTurnButton").hide();
        }
    });

    $("#changeTurnButton").click(function () {
        var currentTurnId = $(this).data("turn-id");

        if (currentTurnId) {
            $.ajax({
                url: '@Url.Action("ChangeTurn", "Manage")',
                type: 'POST',
                data: { currentTurnId: currentTurnId },
                success: function () {
                    console.log("Turno cambiado correctamente.");
                },
                error: function (xhr, status, error) {
                    console.error("Error al cambiar el turno:", status, error);
                    console.log("Detalles:", xhr.responseText);
                }
            });
        }
    });
</script>
